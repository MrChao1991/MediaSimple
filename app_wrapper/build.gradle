apply plugin: 'com.android.application'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

static def buildTime() {
    return new Date().format("yyyyMMdd");
}
android {

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    compileSdkVersion deps.build_versions.compileSdkVersion

    defaultConfig {
        applicationId deps.build_versions.applicationId
        minSdkVersion deps.build_versions.minSdkVersion
        targetSdkVersion deps.build_versions.targetSdkVersion
        versionCode deps.build_versions.versionCode
        versionName deps.build_versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        //打包时间
        resValue "string", "build_time", buildTime()
    }

    buildTypes {
        release {
            //更改AndroidManifest.xml中预先定义好占位符信息
            //manifestPlaceholders = [app_icon: "@drawable/icon"]
            // 不显示Log
            buildConfigField "boolean", "LEO_DEBUG", "false"
            //是否zip对齐
            zipAlignEnabled true
            // 缩减resource文件
            shrinkResources true
            //Proguard
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.release
        }

        debug {
            //给applicationId添加后缀“.debug”
            applicationIdSuffix ".debug"
            //manifestPlaceholders = [app_icon: "@drawable/launch_beta"]
            buildConfigField "boolean", "LOG_DEBUG", "true"
            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
            debuggable true
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation              deps.supports.appcompat_v7
    implementation              deps.supports.constraint_layout
    testImplementation          deps.supports.junit
    androidTestImplementation   deps.supports.test_runner
    androidTestImplementation   deps.supports.test_espresso_core
    implementation              deps.supports.multidex

    implementation project(':lib_common')

    if (!Boolean.valueOf(deps.isModule)) {
//        implementation project(':module_db')
        implementation project(':module_main')
        implementation project(':module_mine')
        implementation project(':module_player')
        implementation project(':module_av_editor')
//        implementation project(':module_media')
    }
}
